apply plugin: 'com.android.library'

def isReleaseBuild = false
gradle.startParameter.taskNames.each({
    String taskName = it.toLowerCase()
    if (taskName.contains("release")) {
        isReleaseBuild = true
    }
    if (taskName.equalsIgnoreCase('uploadArchives')) {
        isReleaseBuild = true
    }
})

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion

        renderscriptTargetApi rootProject.ext.renderscriptTargetApi
        renderscriptSupportModeEnabled rootProject.ext.renderscriptSupportModeEnabled
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-13', '-DANDROID_TOOLCHAIN=clang'
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        consumerProguardFiles 'proguard-rules.pro'
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            externalNativeBuild {
                cmake {
                    abiFilters = ['armeabi-v7a', 'arm64-v8a']
                }
            }
        }

        debug {
            jniDebuggable true
            externalNativeBuild {
                cmake {
                    abiFilters = ['armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64']
                }
            }
        }
    }

    packagingOptions {
        if (isReleaseBuild) {
            exclude 'lib/x86_64/*.so'
            exclude 'lib/x86/*.so'
        }
    }

    lint {
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }

    namespace 'com.hoko.blur'

    buildFeatures {
        renderScript rootProject.ext.renderscriptEnabled
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:${deps.junitVersion}"
    androidTestImplementation "androidx.test.ext:junit:${deps.androidTestJunitVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${deps.espressoCoreVersion}"
    implementation "androidx.annotation:annotation:${deps.annotationVersion}"
}

ext {
    publishedGroupId = 'io.github.hokofly'
    libraryName = 'HokoBlur'
    artifact = 'hoko-blur'

    libraryDescription = 'a blur effect generator library'

    siteUrl = 'https://github.com/HokoFly/HokoBlur'
    gitUrl = 'https://github.com/HokoFly/HokoBlur.git'

    libraryVersion = HOKO_BLUR_VERSION

    developerName = 'HokoFly'
    developerEmail = 'yuxfzju@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply from: file('maven-center.gradle')